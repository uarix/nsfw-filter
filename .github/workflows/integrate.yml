name: Build ðŸ‘‰ Test  

on:  
  push:  
    branches: [ "master" ]  
  pull_request:  
    branches: [ "master" ]  
  workflow_dispatch:  

jobs:  
  lint-and-build:  
    name: Lint and Build  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        node-version: [16]  

    steps:  
      - uses: actions/checkout@v4  

      - name: Cache Node.js modules  
        uses: actions/cache@v4  
        with:  
          path: ~/.npm  
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}  
          restore-keys: |  
            ${{ runner.os }}-node-${{ matrix.node-version }}-  

      - name: Use Node.js ${{ matrix.node-version }}  
        uses: actions/setup-node@v4  
        with:  
          node-version: ${{ matrix.node-version }}  

      - name: Install dependencies  
        run: npm ci  
        env:  
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'  

      - name: Run eslint checks  
        run: npm run lint  

      - name: Build  
        run: npm run build  

      - name: Upload build artifacts  
        uses: actions/upload-artifact@v3  
        with:  
          name: dist  
          path: dist/  

  unit-tests:  
    name: Unit Tests  
    needs: lint-and-build  
    runs-on: ubuntu-latest  
    
    steps:  
      - uses: actions/checkout@v4  

      - name: Use Node.js 16  
        uses: actions/setup-node@v4  
        with:  
          node-version: 16  

      - name: Install dependencies  
        run: npm ci  
        env:  
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'  

      - name: Run unit tests  
        run: npm run test:unit  

  e2e-tests:  
    if: false
    name: E2E Tests  
    needs: lint-and-build  
    runs-on: ubuntu-latest  
    continue-on-error: true
    
    steps:  
      - uses: actions/checkout@v4  

      - name: Download build artifacts  
        uses: actions/download-artifact@v3  
        with:  
          name: dist  
          path: dist/  

      - name: Use Node.js 16  
        uses: actions/setup-node@v4  
        with:  
          node-version: 16  

      - name: Setup Chrome  
        uses: browser-actions/setup-chrome@latest  
        with:  
          chrome-version: stable  

      - name: Install dependencies  
        run: npm ci  
        env:  
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'  

      - name: Get Chrome path  
        id: chrome  
        run: |  
          CHROME_PATH=$(which google-chrome)  
          echo "CHROME_PATH=$CHROME_PATH" >> $GITHUB_ENV  
          echo "Found Chrome at: $CHROME_PATH"  

      - name: Display environment info  
        run: |  
          google-chrome --version  
          echo "Chrome path: $CHROME_PATH"  
          echo "Node version: $(node --version)"  
          echo "NPM version: $(npm --version)"  

      - name: Run E2E tests  
        env:  
          CI: 'true'  
          HEADLESS: 'true' 
          CHROME_PATH: ${{ env.CHROME_PATH }}  
          DEBUG: 'puppeteer:*'
          PUPPETEER_TIMEOUT: '30000'  
          NODE_OPTIONS: '--max-old-space-size=4096'  
        run: |  
          echo "Starting E2E tests with Chrome at: $CHROME_PATH"  
          xvfb-run --auto-servernum npm run test:e2e  

      - name: Upload test artifacts  
        if: failure()  
        uses: actions/upload-artifact@v3  
        with:  
          name: test-artifacts  
          path: |  
            test-results/  
            logs/  